---
- name: Prepare controller variables
  import_playbook: bastion_setup.yaml

- name: Prepare variables
  hosts: local
  environment:
    TF_VAR_network_id: "{{ main_network_id }}"
    TF_VAR_router_id: "{{ main_router_id }}"
    TF_VAR_subnet_id: "{{ main_subnet_id }}"
  vars:
    scenario_name: sfs_monitoring
    infra_state: present
  roles:
    - build_infrastructure
  tasks:
    - name: Register build result
      set_fact:
        sfs_monitoring_instance_ip: "{{ tf_output.outputs['sfs_instance_ip'].value }}"
        sfs_monitoring_sfs_path: "{{ tf_output.outputs['sfs_path'].value }}"

    - name: Register sfs_instance
      add_host:
        name: "sfs_instance"
        groups: "gatewayed"
        ansible_host: "{{ sfs_monitoring_instance_ip }}"
        ansible_ssh_user: "linux"
        ansible_ssh_private_key_file: "{{ local_private_key }}"
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null'
          -o PasswordAuthentication=no

- name: Wait for hosts
  hosts: gatewayed
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        timeout: 120

- name: Setup sfs scenario on sfs_intance
  hosts: sfs_instance
  become: yes
  vars:
    sfs_shared_path: "{{ hostvars.local.sfs_monitoring_sfs_path }}"
    mount_path: "/mnt/sfs_share"
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install NFS mount utility
      apt:
        pkg: nfs-common
        state: present

    - name: Unmount a mounted volume
      mount:
        path: "{{ mount_path }}"
        state: unmounted

    - name: Mount NFS share
      mount:
        fstype: nfs
        name: "{{ mount_path }}"
        opts: "vers=3,timeo=600,nolock"
        src: "{{ sfs_shared_path }}"
        state: mounted

    - name: Copy nfs stats script to sfs_instance
      copy:
        src: "nfs/nfsiostat.sh"
        dest: /tmp/

    - name: Changing perm of "nfsiostat.sh", adding "+x"
      file:
        dest: /tmp/nfsiostat.sh
        mode: a+x

- name: Install telegraf client on sfs_instance
  hosts: sfs_instance
  become: yes
  vars_files:
    - "./vars/telegraf_dbconnection_vars.yaml"
  roles:
    - telegraf_client
  vars:
    telegraf_influxdb_retention_policy: ""
    telegraf_plugins_base:
      - name: mem
      - name: exec
        options:
          commands: ["/tmp/nfsiostat.sh"]
          timeout: "10s"
          data_format: "influx"
      - name: cpu
        options:
          percpu: "false"
          totalcpu: "true"
          fielddrop:
            - "time_*"
      - name: http_listener_v2
        options:
          service_address: "localhost:8080"
          data_format: "influx"
