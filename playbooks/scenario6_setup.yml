---
- name: Prepare clouds.yaml for test_host
  import_playbook: prepare_config.yml

- name: Prepare variables
  hosts: test_host
  tasks:
  - name: Register scenario 6 vars
    set_fact:
      terraform_base_dir: "terraform"
      requirements: "requirements.txt"
      #tmp_dir: "~/tmp"                                       #delete before push to master
      #key_name: "key_scn6"                                   #delete before push to master
      #scenario_name: "scenario6"                             #delete before push to master
  #- name: Create tmp dir                                     #delete this step before push to master
    #file:
      #path: "{{ tmp_dir }}"
      #state: directory


- name: Build infrastructure
  hosts: test_host
  roles:
    - build_infrastructure
  environment:
    OS_CLIENT_CONFIG_FILE: "{{ clouds_yaml_file }}"
    TF_VAR_psql_password: "{{ psql_password }}"                      #change to {{ psql_password }} before push to master
  vars:
    infra_state: present
  tasks:
  - name: Register build result
    set_fact:
      db_password: "{{ tf_output.outputs['db_password'].value }}"
      db_username: "{{ tf_output.outputs['db_username'].value }}"
      db_address: "{{ tf_output.outputs['db_address'].value }}"
      db_host: "{{tf_output.outputs['db_host'].value}}"
      db_port: "{{tf_output.outputs['db_port'].value}}"
      scn6_public_ip: "{{ tf_output.outputs['scn_public_ip'].value }}"
  - name: Download private key from test_host
    fetch:
      src: "{{ tmp_dir }}/{{ key_name }}"
      dest:  "{{ local_private_key }}"
      mode: 0600
      flat: yes

- name: Register used hosts
  hosts: local
  #vars:
  #  key_name: "key_scn6"                                   #delete before push to master
  tasks:
    - name: Register host
      add_host:
        hostname: "scn6_ecs"
        ansible_ssh_host: "{{ hostvars.test_host.scn6_public_ip }}"
        ansible_ssh_user: "linux"
        ansible_ssh_private_key_file: "{{ local_private_key }}"

- name: Wait for host
  hosts: scn6_ecs
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        delay: 5
        timeout: 120

- name: Start Server
  hosts: scn6_ecs
  become: yes
  vars:
    server_port: 8081
  roles:
    - role: too_simple_server
      vars:
        pg_db_url: "{{ hostvars.test_host.db_address }}"
        pg_database: "entities"
        pg_username: "{{ hostvars.test_host.db_username }}"
        pg_password: "{{ hostvars.test_host.db_password }}"
        pg_host: "{{hostvars.test_host.db_host}}"
        pg_port: "{{hostvars.test_host.db_port}}"
        debug: True
  tasks:
    - name: Register facts
      set_fact:
        server_local_port: "{{ server_port }}"

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install PIP, libpq-dev and python-dev
      apt:
        name:
          - python3-setuptools
          - python3-pip
          - libpq-dev
          - python-dev

    - name: Install psycopg2 for Postgresql
      pip:
        executable: pip3
        name: psycopg2-binary
        state: forcereinstall

    - name: Add records to rds
      script: rds/add_records_to_rds.py --host {{pg_host}} --port {{pg_port}}  --username {{pg_username}} --password {{pg_password}}  --database{{pg_database}}