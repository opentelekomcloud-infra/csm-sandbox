---
- name: Prepare controller variables
  import_playbook: bastion_setup.yaml

- name: Prepare variables
  hosts: local
  vars:
    scenario_name: as_monitoring
    infra_state: present
    terraform_variables:
      network_id: "{{ main_network_id }}"
      router_id: "{{ main_router_id }}"
      subnet_id: "{{ main_subnet_id }}"
      controller_ip: "{{ controller_public_ip }}"
  roles:
    - build_infrastructure
  tasks:
    - name: Register build result
      set_fact:
        as_monitoring_instance_ip: "{{ tf_output.outputs['as_instance_ip'].value }}"
        as_monitoring_lb_ip: "{{ tf_output.outputs['lb_instance_ip'].value }}"
        as_monitoring_control_ip: "{{ tf_output.outputs['as_control_instance_ip'].value }}"

    - name: Register as_monitoring
      add_host:
        name: as_instance
        groups: gatewayed
        ansible_host: "{{ as_monitoring_instance_ip }}"
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null'
          -o PasswordAuthentication=no

    - name: Register as_monitoring_control_instance
      add_host:
        name: as_control_instance
        ansible_host: "{{ as_monitoring_control_ip }}"
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null'
          -o PasswordAuthentication=no

- name: Wait for hosts
  hosts: gatewayed
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        timeout: 120

- name: Configure main host for stress testing
  become: yes
  hosts: gatewayed
  vars:
    script_path: /tmp/check_cpu_load_status.sh
  tasks:
    - name: Install required packages
      apt:
        name: build-essential

    - name: Install lookbusy
      script: "autoscaling/install_lookbusy.sh"

    - name: Copy test script to host
      copy:
        src: "autoscaling/{{ item }}"
        dest: /tmp/
      with_items:
        - "cpu_load.py"
        - "load_levels.dat"
        - "check_cpu_load_status.sh"

    - name: Changing perm of "check_cpu_load_status.sh", adding "+x"
      file:
        dest: "{{ script_path }}"
        mode: a+x

- name: Install telegraf client on as_instance
  hosts: as_control_instance
  become: yes
  vars:
    telegraf_local_port: 8080
    monitoring_local_port: 23456
  vars_files:
    - ./vars/telegraf_dbconnection_vars.yaml
  roles:
    - role: telegraf_client
      vars:
        telegraf_influxdb_retention_policy: ""
        telegraf_plugins_base:
          - name: http_listener_v2
            options:
              service_address: "localhost:{{ telegraf_local_port }}"
              data_format: "influx"
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: yes
        nginx_vhosts:
          - listen: "80"
            server_name: localhost
            extra_parameters: |
              location / {
                  proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
                  proxy_set_header Host $http_host;
                  proxy_http_version 1.1;
              }
              location /telegraf {
                  proxy_pass         http://localhost:{{ telegraf_local_port }};
                  proxy_set_header   Host $host;
              }
              location /smn {
                  proxy_pass         http://localhost:{{ monitoring_local_port }}/smn;
                  proxy_set_header   Host $host;
              }

- name: Install csm test utils, run as_monitoring and as_load
  hosts: as_control_instance
  become: yes
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install PIP
      apt:
        name:
          - python3-setuptools
          - python3-pip

    - name: Install test utils
      pip:
        executable: pip3
        name: csm-test-utils
        state: forcereinstall
