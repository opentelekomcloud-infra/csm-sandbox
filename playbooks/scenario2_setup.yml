---
- name: Register existing settings
  hosts: local
  tasks:
  - name: Register host
    add_host:
      hostname: 'scn2_ecs'
      ansible_ssh_host: "{{ lookup('env', 'SERVER_PUBLIC_IP') }}"
      ansible_ssh_user: 'linux'

- name: Wait for host
  hosts: scn2_ecs
  gather_facts: no
  tasks:
  - name: Wait for host to be up
    wait_for_connection:
      delay: 5
      timeout: 120

- name: Start Server
  hosts: scn2_ecs
  become: yes
  vars_files:
  - "./vars/telegraf_dbconnection_vars.yml"
  vars:
    server_port: 8081
  roles:
  - role: too_simple_server
    vars:
      pg_db_url: "{{ lookup('env', 'PSQL_ADDRESS') }}"
      pg_database: "entities"
      pg_username: "{{ lookup('env', 'PSQL_USERNAME') }}"
      pg_password: "{{ lookup('env', 'PSQL_PASSWORD') }}"
      debug: False
  - role: telegraf-client
    vars:
      telegraf_plugins_base:
      - name: postgresql
        options:
          address: "postgres://{{ lookup('env', 'PSQL_USERNAME') }}:{{ lookup('env', 'PSQL_PASSWORD') }}@{{ lookup('env', 'PSQL_ADDRESS') }}/entities"
  tasks:
  - name: Register facts
    set_fact:
      server_local_port: "{{ server_port }}"

- name: Install telegraf client on Server
  hosts: scn2_ecs
  become: true
  vars_files:
  - "./vars/telegraf_dbconnection_vars.yml"
  roles:
  - role: telegraf-client
    vars:
      telegraf_local_port: "{{ server_local_port }}"
      telegraf_plugins_base:
      - name: http_listener_v2
        options:
          service_address: "localhost:{{ telegraf_local_port }}"
          data_format: "influx"
  - role: geerlingguy.nginx
    vars:
      nginx_remove_default_vhost: yes
      nginx_vhosts:
      - listen: "{{ telegraf_local_port }}"
        server_name: "localhost"
        extra_parameters: |
            location / {
                proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_http_version 1.1;
                proxy_pass         http://localhost:{{ server_local_port }};
            }
            location /telegraf {
                proxy_pass         http://localhost:{{ telegraf_local_port }};
                proxy_set_header   Host $host;
            }