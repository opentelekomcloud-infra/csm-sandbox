---
- name: Prepare main network with the controller host
  import_playbook: bastion_setup.yaml

- name: Create key pair for lb monitoring
  openstack.cloud.keypair:
    name: "{{ keypair }}"
    public_key_file: "{{ key_path }}.pub"
  register: keypair

- name: Prepare variables
  hosts: local
  roles:
    -  ecs_node
    -  loadbalancer
  vars:
    ecs_network_id: "{{ lb_network_id }}"
    loadbalancer_instances: "{{ instances }}"
    loadbalancer_members_count: "{{ instances.results|length }}"
    loadbalancer_subnet_id: "{{ lb_subnet_id }}"
    loadbalancer_lb_local_ip:  "{{ lb_local_ip }}"
  tasks:
    - name: Register build result
      set_fact:
        lb_node_ips: "{{ instances.results }}"

    - name: Register nodes
      add_host:
        name: "{{ item.name }}"
        groups: gatewayed
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null'
          -o PasswordAuthentication=no
      loop: "{{ lb_node_ips }}"

- name: Wait for hosts
  hosts: gatewayed
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        timeout: 120

- name: Start Server
  hosts: gatewayed
  become: yes
  roles:
    - too_simple_server
  vars:
    debug: true
    server_port: 80

- name: Install telegraf client on Bastion
  hosts: control
  become: yes
  vars_files:
    - ./vars/telegraf_dbconnection_vars.yaml
    - ./vars/nginx_telegraf_local.yaml
  roles:
    - role: telegraf_client
      vars:
        telegraf_influxdb_retention_policy: ""
        telegraf_plugins_base:
          - name: http_listener_v2
            options:
              service_address: "localhost:{{ telegraf_local_port }}"
              data_format: "influx"
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: yes
        nginx_vhosts:
          - listen: "80"
            server_name: "localhost"
            extra_parameters: "{{ extra_parameters }}"

- name: Install telegraf client on nodes
  hosts: gatewayed
  become: yes
  vars_files:
    - ./vars/telegraf_dbconnection_vars.yaml
  roles:
    - telegraf_client
  vars:
    telegraf_influxdb_retention_policy: ""
    telegraf_plugins_base:
      - name: cpu
        options:
          percpu: "false"
          totalcpu: "true"
          fielddrop:
            - "time_*"
      - name: net
        options:
          interfaces:
            - "eth*"
            - "enp0s[0-1]"
            - "lo"
            - "ens3"

- name: Prepare runner
  hosts: control
  become: yes
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install PIP
      apt:
        name:
          - python3-setuptools
          - python3-pip

    - name: Install csm-test-utils
      pip:
        executable: pip3
        name: csm-test-utils
