---
- name: Prepare main network with the controller host
  import_playbook: bastion_setup.yaml

- name: Create key pair for lb monitoring and including required variables
  hosts: local
  tasks:
    - name: Include variables required for lm monitoring infra
      include_vars: ./vars/lb_monitoring.yaml
    - name: Create key pair for lb monitoring scenario
      os_keypair:
        name: "{{ lb_keypair }}"
        public_key_file: "{{ local_private_key }}.pub"

- name: Build infrastructure
  hosts: local
  roles:
    - ecs_node
    - loadbalancer
  vars:
    state: present
    ecs_network_id: "{{ main_network_id }}"
    ecs_subnet_cidr: "{{ network_cidr | ansible.netcommon.ipsubnet('24', 1) }}"
    loadbalancer_subnet_id: "{{ main_subnet_id }}"
    loadbalancer_instances: "{{ instances }}"

- name: Register nodes
  hosts: local
  tasks:
    - name: Register nodes
      add_host:
        name: "{{ item.openstack.private_v4 }}"
        groups: gatewayed
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o StrictHostKeyChecking=no
          -o IdentityFile="{{ local_private_key }}"
          -o User=linux
          -o PasswordAuthentication=no
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}'
      loop: "{{ instances.results }}"

- name: Wait for nodes to be up
  hosts: gatewayed
  gather_facts: no
  tasks:
    - name: Wait for nodes to be up
      wait_for_connection:
        timeout: 250

- name: Start Server
  hosts: gatewayed
  become: yes
  roles:
    - too_simple_server
  vars:
    debug: true
    server_port: 80

- name: Create object with data about lb infra
  hosts: controller
  gather_facts: no
  tasks:
    - name: Getting data for swift object
      set_fact:
        nodes_ips: >
          "{{ nodes_ips | combine( {item.openstack.name: item.openstack.private_v4} ) }}"
      with_items: "{{ instances.results }}"

    - name: Create object or overwrite existing object
      swift_client:
        container: "{{ container_name }}"
        object: "{{ scenario }}"
        content:
          loadbalancer_public_ip: "{{ loadbalancer.loadbalacer.public_vip_address }}"
          loadbalancer_private_ip: "{{ loadbalancer.loadbalacer.private_v4 }}"
          lb_instances_ips: "{{ nodes_ips | to_json }}"
          loadbalancer_keypair: "{{ lb_keypair }}"
        overwrite: true
        state: present
