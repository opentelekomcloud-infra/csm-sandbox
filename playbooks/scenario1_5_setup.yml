---

- name: Prepare clouds.yaml for test_host
  import_playbook: prepare_config.yml

- name: Prepare variables
  hosts: test_host
  tasks:
  - name: Register scenario 1.5 vars
    set_fact:
      terraform_base_dir: "../scenarios"
      requirements: "requirements.txt"

- name: Build infrastructure
  hosts: test_host
  roles:
    - build_infrastructure
  environment:
    OS_CLIENT_CONFIG_FILE: "{{ clouds_yaml_file }}"
  vars:
    infra_state: present
  tasks:
  - name: Register build result
    set_fact:
      bastion_public_ip: "{{ tf_output.outputs['scn1_5_bastion_fip'].value }}"
      loadbalancer_public_ip:  "{{ tf_output.outputs['scn1_5_lb_fip'].value }}"
      node_ips: "{{ tf_output.outputs['scn1_5_ecs_local_ips'].value }}"
  - name: Download private key from test_host
    fetch:
      src: "{{ tmp_dir }}/{{ key_name }}"
      dest:  "{{ local_private_key }}"
      mode: 0600
      flat: yes

- name: Register used hosts
  hosts: local
  tasks:
  - name: Set local facts
    set_fact:
      loadbalancer_public_ip: "{{ hostvars.test_host.loadbalancer_public_ip }}"
      bastion_public_ip: "{{ hostvars.test_host.bastion_public_ip }}"
      node_ips: "{{ hostvars.test_host.node_ips }}"
  - name: Register Bastion
    add_host:
      name: "bastion"
      ansible_host: "{{ bastion_public_ip }}"
      ansible_ssh_user: "linux"
      ansible_ssh_private_key_file: "{{ local_private_key }}"
  - name: Register nodes
    add_host:
      name: "{{ item }}"
      groups: "gatewayed"
      ansible_ssh_user: "linux"
      ansible_ssh_private_key_file: "{{ local_private_key }}"
      ansible_ssh_common_args: "-o ProxyCommand='ssh -W %h:%p -q linux@{{ bastion_public_ip }} -i {{ local_private_key }}' -o PasswordAuthentication=no"
    loop: "{{ node_ips }}"


- name: Wait for bastion
  hosts: bastion
  gather_facts: no
  tasks:
  - name: Wait for host to be up
    wait_for_connection:
      timeout: 120

- name: Wait for hosts
  hosts: gatewayed
  gather_facts: no
  tasks:
  - name: Wait for host to be up
    wait_for_connection:
      timeout: 120

- name: Start Server
  hosts: gatewayed
  become: yes
  roles:
  - too_simple_server
  vars:
    debug: True
    server_port: 80


- name: Install telegraf client on Bastion
  hosts: bastion
  become: yes
  vars_files:
  - "./vars/telegraf_dbconnection_vars.yml"
  - "./vars/nginx_telegraf_local.yml"
  tasks:
  - name: Install PIP
    apt:
      name:
        - python3-setuptools
        - python3-pip
  - name: Install test utils
    pip:
      executable: pip3
      name: csm-test-utils
  roles:
  - role: telegraf-client
    vars:
      telegraf_plugins_base:
      - name: http_listener_v2
        options:
          service_address: "localhost:{{ telegraf_local_port }}"
          data_format: "influx"
  - role: geerlingguy.nginx
    vars:
      nginx_remove_default_vhost: yes
      nginx_vhosts:
      - listen: "80"
        server_name: "localhost"
        extra_parameters: "{{ extra_parameters }}"

- name: Copy and configure test script files to Bastion
  hosts: bastion
  vars:
    test_path: /home/linux/test
    project_path: /home/linux/customer-service-monitoring
    keys_path: "{{ project_path }}/scenarios/scenario1_5"
    inventory_path: "{{ test_path }}/inventory/prod"
    loadbalancer_public_ip: "{{ hostvars.local.loadbalancer_public_ip }}"
    version: "HEAD"
  tasks:
  - name: Checkout roles from git
    git:
      repo: 'https://github.com/opentelekomcloud-infra/csm-ansible-roles.git'
      dest: "{{ test_path }}"
      version: "{{ version }}"

  - name: Create directory for inventory
    file:
      path: "{{ inventory_path }}"
      state: directory
      mode: "0755"

  - name: Add ssh-configuration to ansible
    ini_file:
      path: "{{ test_path }}/ansible.cfg"
      section: defaults
      option: host_key_checking
      value: False

  - name: Copy inventory
    vars:
      hosts: "{{ groups.gatewayed }}"
    template:
      src: "scenario1_5.yml"
      dest: "{{ inventory_path }}"

  - name: Ensure private key and public one are present
    copy:
      src: "{{ item }}"
      dest: "{{ test_path }}"
      mode: 0600
    with_items:
    - "/tmp/key_scenario1_5.pub"
    - "/tmp/key_scenario1_5"

  - name: Copy playbooks and test script to bastion
    copy:
      src: "{{ item }}"
      dest: "{{ test_path }}"
    with_items:
    - "scenario1_5_start_server.yml"
    - "scenario1_5_stop_server_on_random_node.yml"
    - "lb_down_test.sh"

  - name: Ensure that cron is installed
    become: yes
    apt:
      name: cron
      update_cache: yes
      cache_valid_time: 3600

  - name: Copy loadbalancer ip to bastion
    copy:
      content: "{{ loadbalancer_public_ip }}"
      dest: "{{ test_path }}/load_balancer_ip"

- name: Prepare test
  hosts: bastion
  become: yes
  tasks:
  - name: Changing perm of "lb_down_test.sh", adding "+x"
    file:
      dest: '/home/linux/test/lb_down_test.sh'
      mode: 'a+x'

  - name: Schedule test
    cron:
      name: "Run scenario 1.5 monitoring"
      minute: "*/5"
      job: /home/linux/test/lb_down_test.sh
