---
- name: Prepare controller variables
  import_playbook: bastion_setup.yaml

- name: Prepare variables
  hosts: local
  vars:
    scenario_name: rds_monitoring
    infra_state: present
    terraform_variables:
      network_cidr: "{{ terraform_network_cidr }}"
      network_id: "{{ main_network_id }}"
      router_id: "{{ main_router_id }}"
      subnet_id: "{{ main_subnet_id }}"
      psql_password: "Spaciba2020!"
  roles:
    - build_infrastructure
  tasks:
    - name: Register build result
      set_fact:
        db_password: "{{ tf_output.outputs['db_password'].value }}"
        db_username: "{{ tf_output.outputs['db_username'].value }}"
        db_address: "{{ tf_output.outputs['db_address'].value }}"
        ecs_instance_ip: "{{ tf_output.outputs['ecs_ip'].value }}"
    - name: Register ecs
      add_host:
        name: "rds_scn_ecs"
        groups: "gatewayed"
        ansible_host: "{{ ecs_instance_ip }}"
        ansible_ssh_user: "linux"
        ansible_ssh_private_key_file: "{{ local_private_key }}"
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null'
          -o PasswordAuthentication=no

- name: Wait for host
  hosts: rds_scn_ecs
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        delay: 5
        timeout: 120

- name: Start Server
  hosts: rds_scn_ecs
  become: yes
  vars_files:
    - "./vars/telegraf_dbconnection_vars.yaml"
  vars:
    server_port: 8081
  roles:
    - role: too_simple_server
      vars:
        pg_db_url: "{{ hostvars.test_host.db_address }}"
        pg_database: "entities"
        pg_username: "{{ hostvars.test_host.db_username }}"
        pg_password: "{{ hostvars.test_host.db_password }}"
        debug: false
