---
- name: Prepare the main network
  import_playbook: build_infra.yaml

# Prepare ping.vpc.64
- name: Install dependencies and copy script
  hosts: watchers
  vars:
    test_nodes: "{{ vpc_a_nodes[hostvars[host_name]] }}"
    metric_name: ping.vpc.64
    packet_size: 56
  tasks:
    - name: Copy first script to machine
      block:
      - name: Set facts for service register
        set_fact:
          service_name: "{{ metric_name | replace('.','') }}.service"
          script_path: "{{ home_dir }}/{{ metric_name }}"
          script_name: ping64.py

      - name: Install required packages
        become: yes
        apt:
          name:
            - python3-pip
            - python3-venv

      - name: Create venv
        pip:
          name: pip
          virtualenv: "{{ script_path }}/venv"
          virtualenv_command: '/usr/bin/python3 -m venv'

      - name: Install statsd
        pip:
          name:
            - statsd
            - pyyaml
          virtualenv: "{{ script_path }}/venv"

      - name: Ensures {{ home_dir }}/{{ metric_name }} dir exists
        file:
          path: "{{ home_dir }}/{{ metric_name }}"
          state: directory

      - name: Write configuration
        template:
          src: files/ping/ping.yaml.j2
          dest: "{{ home_dir }}/{{ metric_name }}/ping.yaml"
          force: yes

      - name: Copy script
        copy:
          src: files/ping/ping.py
          dest: "{{ home_dir }}/{{ metric_name }}/{{ script_name }}"

      - name: Write configuration
        become: yes
        template:
          src: files/ping/ping.service.j2
          dest: "/etc/systemd/system/{{ hostvars[host_name]['service_name'] }}"
          owner: root
          group: root

      - name: Start service
        become: yes
        systemd:
          name: "{{ hostvars[host_name]['service_name'] }}"
          state: started
          enabled: yes
      when: hostvars[host_name].vpc == "VPC_A"

# Prepare ping.vpc.1492
- name: Install dependencies and copy script
  hosts: watchers
  vars:
    test_nodes: "{{ vpc_a_nodes[hostvars[host_name]] }}"
    metric_name: ping.vpc.1500
    packet_size: 1492
  tasks:
    - name: Copy first script to machine
      block:
      - name: Set facts for service register
        set_fact:
          service_name: "{{ metric_name | replace('.','') }}.service"
          script_path: "{{ home_dir }}/{{ metric_name }}"
          script_name: ping1500.py

      - name: Install required packages
        become: yes
        apt:
          name:
            - python3-pip
            - python3-venv

      - name: Create venv
        pip:
          name: pip
          virtualenv: "{{ script_path }}/venv"
          virtualenv_command: '/usr/bin/python3 -m venv'

      - name: Install statsd
        pip:
          name:
            - statsd
            - pyyaml
          virtualenv: "{{ script_path }}/venv"

      - name: Ensures {{ home_dir }}/{{ metric_name }} dir exists
        file:
          path: "{{ home_dir }}/{{ metric_name }}"
          state: directory

      - name: Write configuration
        template:
          src: files/ping/ping.yaml.j2
          dest: "{{ home_dir }}/{{ metric_name }}/ping.yaml"
          force: yes

      - name: Copy script
        copy:
          src: files/ping/ping.py
          dest: "{{ home_dir }}/{{ metric_name }}/{{ script_name }}"

      - name: Write configuration
        become: yes
        template:
          src: files/ping/ping.service.j2
          dest: "/etc/systemd/system/{{ hostvars[host_name]['service_name'] }}"
          owner: root
          group: root

      - name: Start service
        become: yes
        systemd:
          name: "{{ hostvars[host_name]['service_name'] }}"
          state: started
          enabled: yes
      when: hostvars[host_name].vpc == "VPC_A"
