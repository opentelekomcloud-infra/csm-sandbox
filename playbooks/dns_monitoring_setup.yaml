---
- name: Prepare controller variables
  import_playbook: bastion_setup.yaml

- name: Prepare variables
  hosts: local
  vars:
    scenario_name: dns_monitoring
    infra_state: present
    terraform_variables:
      network_id: "{{ main_network_id }}"
      router_id: "{{ main_router_id }}"
      subnet_id: "{{ main_subnet_id }}"
  roles:
    - build_infrastructure
  tasks:
    - name: Register build result
      set_fact:
        dns_monitoring_instance_ip: "{{ tf_output.outputs['dns_instance_ip'].value }}"
        dns_monitoring_record_name: "{{ tf_output.outputs['dns_record_name'].value }}"

    - name: Register dns_monitoring
      add_host:
        name: dns_instance
        groups: gatewayed
        ansible_host: "{{ dns_monitoring_instance_ip }}"
        ansible_ssh_user: linux
        ansible_ssh_private_key_file: "{{ local_private_key }}"
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null'
          -o PasswordAuthentication=no

- name: Wait for hosts
  hosts: gatewayed
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        timeout: 120

- name: Install telegraf client on dns_instance
  hosts: dns_instance
  become: yes
  vars_files:
    - ./vars/telegraf_dbconnection_vars.yaml
    - ./vars/nginx_telegraf_local.yaml
  roles:
    - role: telegraf_client
      vars:
        telegraf_influxdb_retention_policy: ""
        telegraf_plugins_base:
          - name: http_listener_v2
            options:
              service_address: "localhost:{{ telegraf_local_port }}"
              data_format: "influx"
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: yes
        nginx_vhosts:
          - listen: "80"
            server_name: localhost
            extra_parameters: "{{ extra_parameters }}"

- name: Install csm test utils
  hosts: dns_instance
  become: yes
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install PIP
      apt:
        name:
          - python3-setuptools
          - python3-pip

    - name: Install test utils
      pip:
        executable: pip3
        name: csm-test-utils
        state: forcereinstall
