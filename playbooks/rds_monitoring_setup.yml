---
- name: Prepare controller variables
  import_playbook: setup_scenarios_controller.yml

- name: Prepare variables
  hosts: localhost
  environment:
    OS_CLIENT_CONFIG_FILE: "{{ clouds_yaml_file }}"
    TF_VAR_addr_3: "192.168.8"
    TF_VAR_network_id: "{{ main_network_id }}"
    TF_VAR_router_id: "{{ main_router_id }}"
    TF_VAR_subnet_id: "{{ main_subnet_id }}"
    TF_VAR_subnet_cidr: "{{ main_subnet_cidr }}"
    TF_VAR_psql_password: "345y6~!UYT@hhjjfgj"
  vars:
    scenario_name: rds_monitoring
    terraform_base_dir: terraform
    requirements: requirements.txt
    terraform_workspace: prod
    key_name: key_csm_controller
    infra_state: present
  roles:
    - build_infrastructure
  tasks:
    - name: Register build result
      set_fact:
        db_password: "{{ tf_output.outputs[\"db_password\"].value }}"
        db_username: "{{ tf_output.outputs[\"db_username\"].value }}"
        db_address: "{{ tf_output.outputs[\"db_address\"].value }}"
        ecs_instance_ip: "{{ tf_output.outputs[\"ecs_ip\"].value }}"
    - name: Register ecs
      add_host:
        name: "rds_scn_ecs"
        groups: "gatewayed"
        ansible_host: "{{ ecs_instance_ip }}"
        ansible_ssh_user: "linux"
        ansible_ssh_private_key_file: "{{ local_private_key }}"
        ansible_ssh_common_args: >
          -o ProxyCommand='ssh -W %h:%p -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}' -o PasswordAuthentication=no

- name: Wait for host
  hosts: rds_scn_ecs
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        delay: 5
        timeout: 120

- name: Start Server
  hosts: rds_scn_ecs
  become: yes
  vars_files:
    - "./vars/telegraf_dbconnection_vars.yml"
  vars:
    server_port: 8081
  roles:
    - role: too_simple_server
      vars:
        pg_db_url: "{{ hostvars.localhost.db_address }}"
        pg_database: "entities"
        pg_username: "{{ hostvars.localhost.db_username }}"
        pg_password: "{{ hostvars.localhost.db_password }}"
        debug: False
  tasks:
    - name: Register facts
      set_fact:
        server_local_port: "{{ server_port }}"

- name: Install telegraf client on Server
  hosts: rds_scn_ecs
  become: true
  vars_files:
    - "./vars/telegraf_dbconnection_vars.yml"
  roles:
    - role: telegraf-client
      vars:
        telegraf_influxdb_retention_policy: ""
        telegraf_local_port: 8080
        telegraf_plugins_base:
          - name: http_listener_v2
            options:
              service_address: "localhost:{{ telegraf_local_port }}"
              data_format: "influx"
          - name: postgresql
            options:
              address: >
                postgres://{{ hostvars.localhost.db_username }}
                :{{ hostvars.localhost.db_password }}@{{ hostvars.localhost.db_address }}/entities
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: yes
        nginx_vhosts:
          - listen: "80"
            server_name: "localhost"
            extra_parameters: |
              location / {
                  proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
                  proxy_set_header Host $http_host;
                  proxy_http_version 1.1;
                  proxy_pass         http://localhost:{{ server_local_port }};
              }
              location /telegraf {
                  proxy_pass         http://localhost:{{ telegraf_local_port }};
                  proxy_set_header   Host $host;
              }
