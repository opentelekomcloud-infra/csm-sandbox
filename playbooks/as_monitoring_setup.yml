---
- name: Prepare controller variables
  import_playbook: setup_scenarios_controller.yml

- name: Prepare variables
  hosts: test_host
  environment:
    OS_CLIENT_CONFIG_FILE: "{{ clouds_yaml_file }}"
    TF_VAR_network_id: "{{ main_network_id }}"
    TF_VAR_router_id: "{{ main_router_id }}"
    TF_VAR_subnet_id: "{{ main_subnet_id }}"
    TF_VAR_controller_ip: "{{ controller_public_ip }}"
  vars:
    scenario_name: as_monitoring
    terraform_base_dir: terraform
    requirements: requirements.txt
    terraform_workspace: prod
    key_name: key_csm_controller
    infra_state: present
  roles:
    - build_infrastructure
  tasks:
    - name: Register build result
      set_fact:
        as_monitoring_instance_ip: "{{ tf_output.outputs['as_instance_ip'].value }}"
        as_monitoring_lb_ip: "{{ tf_output.outputs['lb_instance_ip'].value }}"

    - name: Register as_monitoring
      add_host:
        name: "as_instance"
        groups: "gatewayed"
        ansible_host: "{{ as_monitoring_instance_ip }}"
        ansible_ssh_user: "linux"
        ansible_ssh_private_key_file: "{{ local_private_key }}"
        ansible_ssh_common_args: >
          -o ProxyCommand='ssh -W %h:%p -q linux@{{ controller_public_ip }}
          -i {{ local_private_key }}' -o PasswordAuthentication=no

- name: Wait for hosts
  hosts: gatewayed
  gather_facts: no
  tasks:
    - name: Wait for host to be up
      wait_for_connection:
        timeout: 120

- name: Checking load processes
  hosts: gatewayed
  become: yes
  tasks:
    - name: Get reporting processes list from remote host  # noqa 301 305
      ignore_errors: yes
      shell: "ps aux | grep 'cpu_load' | awk '{print $2}'"
      register: process_monitor

    - name: Kill running reporting processes  # noqa 301 305
      ignore_errors: yes
      shell: "kill {{ process_monitor.stdout_lines[0] }}"

    - name: Kill running lookbusy processes  # noqa 301 305
      ignore_errors: yes
      shell: "pkill lookbusy"

    - name: Waiting for status
      wait_for:
        path: "/proc/{{ process_monitor.stdout_lines[0] }}/status"
        state: absent
      ignore_errors: yes

- name: Configure main host for stress testing
  become: yes
  hosts: gatewayed
  tasks:
    - name: Install required packages
      apt:
        name:
          - build-essential
          - cron

    - name: Install lookbusy
      script: "autoscaling/install_lookbusy.sh"

    - name: Copy test script to host
      copy:
        src: "autoscaling/{{ item }}"
        dest: /tmp/
      with_items:
        - "cpu_load.py"
        - "load_levels.dat"
        - "check_cpu_load_status.sh"

    - name: Run load generation script  # noqa 301 305
      shell: "start-stop-daemon -Sbmvp /tmp/cpu_load.pid -x /usr/bin/python3 /tmp/cpu_load.py -- --source /tmp/load_levels.dat --interval 60 --ncpus 2"

    - name: Changing perm of "check_cpu_load_status.sh", adding "+x"
      file: dest=/tmp/check_cpu_load_status.sh mode=a+x

    - name: Schedule load script status check
      cron:
        name: "Check status of CPU load script"
        minute: "*/59"
        job: /tmp/check_cpu_load_status.sh

- name: Install telegraf client on as_instance
  hosts: as_instance
  become: yes
  vars:
    telegraf_local_port: 8080
    monitoring_local_port: 23456
  vars_files:
    - "./vars/telegraf_dbconnection_vars.yml"
  roles:
    - role: telegraf-client
      vars:
        telegraf_influxdb_retention_policy: ""
        telegraf_plugins_base:
          - name: http_listener_v2
            options:
              service_address: "localhost:{{ telegraf_local_port }}"
              data_format: "influx"
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: yes
        nginx_vhosts:
          - listen: "80"
            server_name: "localhost"
            extra_parameters: |
              location / {
                  proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
                  proxy_set_header Host $http_host;
                  proxy_http_version 1.1;
              }
              location /telegraf {
                  proxy_pass         http://localhost:{{ telegraf_local_port }};
                  proxy_set_header   Host $host;
              }
              location /smn {
                  proxy_pass         http://localhost:{{ monitoring_local_port }}/smn;
                  proxy_set_header   Host $host;
              }

- name: Install csm test utils, run as_monitoring and as_load
  hosts: as_instance
  become: yes
  vars:
    lb_ip: "{{ hostvars.localhost.as_monitoring_lb_ip }}"
    nohup_py3: "nohup /usr/bin/python3 -m csm_test_utils"
    telegraf_host: "http://localhost:8080"
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install PIP
      apt:
        name:
          - python3-setuptools
          - python3-pip
          - cron

    - name: Install test utils
      pip:
        executable: pip3
        name: csm-test-utils
        state: forcereinstall

    - name: Start monitoring server and loadbalancer
      shell: "{{ nohup_py3 }} {{ item }} --telegraf {{ telegraf_host }} --target {{ lb_ip }} &" # noqa 301 305
      loop:
        - "as_monitor"
        - "as_load"
